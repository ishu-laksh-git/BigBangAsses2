// <auto-generated />
using System;
using BigBangAssesmemtTwo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BigBangAssesmemtTwo.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230702080926_add")]
    partial class add
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BigBangAssesmemtTwo.Models.Doctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsApproved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speciality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersUserId")
                        .HasColumnType("int");

                    b.HasKey("DoctorId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("BigBangAssesmemtTwo.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthIssue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersUserId")
                        .HasColumnType("int");

                    b.HasKey("PatientId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("BigBangAssesmemtTwo.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordKey")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            EmailId = "admin@gmail.com",
                            PasswordHash = new byte[] { 18, 114, 55, 107, 252, 59, 202, 66, 43, 35, 236, 18, 135, 163, 230, 15, 142, 115, 51, 116, 193, 197, 188, 88, 156, 74, 5, 38, 157, 169, 187, 88, 67, 29, 213, 58, 95, 240, 50, 114, 75, 246, 85, 225, 224, 72, 80, 106, 28, 203, 91, 179, 10, 225, 75, 138, 124, 219, 12, 48, 242, 240, 248, 226 },
                            PasswordKey = new byte[] { 18, 55, 208, 14, 189, 115, 71, 85, 210, 59, 56, 99, 252, 14, 81, 155, 93, 102, 11, 116, 234, 218, 255, 231, 20, 13, 61, 242, 31, 244, 91, 79, 224, 231, 161, 240, 115, 40, 250, 154, 223, 248, 14, 217, 126, 209, 228, 45, 70, 218, 168, 122, 225, 153, 137, 71, 161, 241, 186, 116, 221, 41, 230, 156, 185, 95, 56, 122, 109, 216, 82, 24, 159, 54, 111, 95, 42, 250, 46, 39, 169, 88, 122, 182, 144, 188, 239, 237, 231, 153, 8, 233, 39, 234, 9, 69, 10, 69, 123, 95, 72, 80, 97, 124, 247, 167, 168, 82, 133, 211, 162, 248, 239, 78, 13, 189, 114, 209, 150, 119, 54, 28, 221, 197, 110, 250, 233, 249 },
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("BigBangAssesmemtTwo.Models.Doctor", b =>
                {
                    b.HasOne("BigBangAssesmemtTwo.Models.User", "Users")
                        .WithMany()
                        .HasForeignKey("UsersUserId");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("BigBangAssesmemtTwo.Models.Patient", b =>
                {
                    b.HasOne("BigBangAssesmemtTwo.Models.User", "Users")
                        .WithMany()
                        .HasForeignKey("UsersUserId");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
