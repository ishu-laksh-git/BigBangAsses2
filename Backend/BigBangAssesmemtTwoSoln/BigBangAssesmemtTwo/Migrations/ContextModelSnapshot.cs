// <auto-generated />
using System;
using BigBangAssesmemtTwo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BigBangAssesmemtTwo.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BigBangAssesmemtTwo.Models.Doctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsApproved")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Speciality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersUserId")
                        .HasColumnType("int");

                    b.HasKey("DoctorId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("BigBangAssesmemtTwo.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthIssue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsersUserId")
                        .HasColumnType("int");

                    b.HasKey("PatientId");

                    b.HasIndex("UsersUserId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("BigBangAssesmemtTwo.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordKey")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            EmailId = "admin@gmail.com",
                            PasswordHash = new byte[] { 26, 179, 69, 149, 225, 141, 59, 11, 222, 150, 45, 46, 192, 17, 89, 146, 12, 233, 51, 57, 98, 247, 70, 119, 152, 190, 183, 19, 195, 68, 173, 55, 159, 245, 45, 242, 209, 68, 240, 147, 98, 15, 91, 19, 65, 221, 217, 94, 46, 234, 94, 40, 150, 76, 158, 18, 193, 80, 68, 97, 120, 105, 110, 35 },
                            PasswordKey = new byte[] { 151, 28, 11, 30, 101, 155, 222, 184, 235, 126, 184, 216, 59, 63, 219, 120, 81, 173, 5, 203, 5, 120, 173, 218, 40, 219, 20, 17, 204, 148, 202, 198, 151, 248, 41, 209, 138, 200, 99, 108, 126, 167, 86, 177, 130, 202, 107, 108, 15, 59, 185, 70, 54, 156, 15, 100, 77, 189, 135, 217, 194, 18, 141, 210, 95, 103, 127, 40, 184, 117, 66, 255, 228, 111, 183, 111, 203, 77, 203, 205, 9, 81, 168, 42, 13, 50, 119, 48, 18, 64, 109, 53, 192, 132, 229, 57, 12, 27, 53, 193, 144, 164, 164, 226, 195, 228, 84, 61, 179, 81, 168, 106, 25, 224, 135, 108, 142, 205, 121, 164, 225, 38, 49, 159, 232, 251, 211, 11 },
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("BigBangAssesmemtTwo.Models.Doctor", b =>
                {
                    b.HasOne("BigBangAssesmemtTwo.Models.User", "Users")
                        .WithMany()
                        .HasForeignKey("UsersUserId");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("BigBangAssesmemtTwo.Models.Patient", b =>
                {
                    b.HasOne("BigBangAssesmemtTwo.Models.User", "Users")
                        .WithMany()
                        .HasForeignKey("UsersUserId");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
